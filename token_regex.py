import re

token_regex = [
    (re.compile(r"^[A-Za-z][\w]*\b"), "var/func/loop"),
    (re.compile(r"^-?\d+\b"), "int"),
    (re.compile(r"^-?\d*\.\d+\b"), "floatliteral"),
    (re.compile(r"^\"[^\"]*\"\b"), "stringliteral"),
    (re.compile(r"^(WIN|FAIL)\b"), "boolliteral"),
    (re.compile(r"^A (NOOB|NUMBR|NUMBAR|YARN|TROOF)\b"), "typepliteral"),
    (re.compile(r"^HAI\b"), "HAI"),
    (re.compile(r"^KTHXBYE\b"), "KTHXBYE"),
    (re.compile(r"^BTW\b"), "BTW"),
    (re.compile(r"^OBTW\b"), "OBTW"),
    (re.compile(r"^TLDR\b"), "TLDR"),
    (re.compile(r"^I HAS A\b"), "I HAS A"),
    (re.compile(r"^ITZ\b"), "ITZ"),
    (re.compile(r"^R\b"), "R"),
    (re.compile(r"^SUM OF\b"), "SUM OF"),
    (re.compile(r"^DIFF OF\b"), "DIFF OF"),
    (re.compile(r"^PRODUKT OF\b"), "PRODUKT OF"),
    (re.compile(r"^QUOSHUNT OF\b"), "QUOSHUNT OF"),
    (re.compile(r"^MOD OF\b"), "MOD OF"),
    (re.compile(r"^BIGGR OF\b"), "BIGGR OF"),
    (re.compile(r"^SMALLR OF\b"), "SMALLR OF"),
    (re.compile(r"^BOTH OF\b"), "BOTH OF"),
    (re.compile(r"^EITHER OF\b"), "EITHER OF"),
    (re.compile(r"^WON OF\b"), "WON OF"),
    (re.compile(r"^NOT\b"), "NOT"),
    (re.compile(r"^ANY OF\b"), "ANY OF"),
    (re.compile(r"^ALL OF\b"), "ALL OF"),
    (re.compile(r"^BOTH SAEM\b"), "BOTH SAEM"),
    (re.compile(r"^DIFFRINT\b"), "DIFFRINT"),
    (re.compile(r"^SMOOSH\b"), "SMOOSH"),
    (re.compile(r"^MAEK\b"), "MAEK"),
    (re.compile(r"^A\b"), "A"),
    (re.compile(r"^IS NOW A\b"), "IS NOW A"),
    (re.compile(r"^VISIBLE\b"), "VISIBLE"),
    (re.compile(r"^GIMMEH\b"), "GIMMEH"),
    (re.compile(r"^O RLY\?\b"), "O RLY?"),
    (re.compile(r"^YA RLY\b"), "YA RLY"),
    (re.compile(r"^MEBBE\b"), "MEBBE"),
    (re.compile(r"^NO WAI\b"), "NO WAI"),
    (re.compile(r"^OIC\b"), "OIC"),
    (re.compile(r"^WTF\?\b"), "WTF\?"),
    (re.compile(r"^OMG\b"), "OMG"),
    (re.compile(r"^OMGWTF\b"), "OMGWTF"),
    (re.compile(r"^IM IN YR\b"), "IM IN YR"),
    (re.compile(r"^UPPIN\b"), "UPPIN"),
    (re.compile(r"^NERFIN\b"), "NERFIN"),
    (re.compile(r"^YR\b"), "YR"),
    (re.compile(r"^TIL\b"), "TIL"),
    (re.compile(r"^WILE\b"), "WILE"),
    (re.compile(r"^IM OUTTA YR\b"), "IM OUTTA YR"),
    (re.compile(r"^AN"), "AN "),
    (re.compile(r".*\b", "string"))
]